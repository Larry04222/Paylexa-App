generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Currency {
  USD
  CAD
  NGN
  EUR
  GBP
  GHS
  ZAR
  KES
}

enum WalletType {
  PERSONAL
  BUSINESS
}

enum FeatureModule {
  P2P
  MARKETPLACE
  SWAP
  UTILITIES
  STUDENT
  VIRTUAL_CARDS
  REFERRALS
  BUDGET
  AI_SUPPORT
}

model User {
  id              String   @id @default(cuid())
  email           String   @unique
  passwordHash    String
  firstName       String
  lastName        String
  type            WalletType
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  wallets         Wallet[]
  kycRecords      KycRecord[]
  sessions        Session[]
  statements      Statement[]
  devicePrints    DeviceFingerprint[]
  featureOverrides FeatureToggle[]
}

model Wallet {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  currency  Currency
  balance   Decimal  @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  statements Statement[]
}

model KycRecord {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  status     String
  level      Int
  metadata   Json
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Session {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  refreshToken String
  createdAt  DateTime @default(now())
  expiresAt  DateTime
  device     DeviceFingerprint? @relation(fields: [deviceId], references: [id])
  deviceId   String?
}

model DeviceFingerprint {
  id         String   @id @default(cuid())
  user       User?    @relation(fields: [userId], references: [id])
  userId     String?
  signature  String
  lastIp     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  sessions   Session[]
}

model FeatureToggle {
  id        String   @id @default(cuid())
  module    FeatureModule
  country   String?
  enabled   Boolean  @default(true)
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Statement {
  id          String   @id @default(cuid())
  wallet      Wallet   @relation(fields: [walletId], references: [id])
  walletId    String
  amount      Decimal
  currency    Currency
  type        String
  description String
  balanceAfter Decimal
  createdAt   DateTime @default(now())
}

model SecurityEvent {
  id         String   @id @default(cuid())
  type       String
  metadata   Json
  createdAt  DateTime @default(now())
}

model Settings {
  id        String   @id @default(cuid())
  key       String   @unique
  value     Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
